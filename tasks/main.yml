---
# tasks file for sbaerlocher.update-management

- name: add OS specific variables
  include_vars: "{{ loop_vars }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml"
        - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}.yml"
        - "{{ ansible_system }}.yml"
        - "defaults.yml"
      paths:
        - "vars"
  loop_control:
    loop_var: loop_vars
  tags:
    - configuration
    - packages

- name: include distribution tasks
  include_tasks: "{{ loop_distribution }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml"
        - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}.yml"
        - "{{ ansible_system }}.yml"
        - "defaults.yml"
      paths:
        - "distribution"
  loop_control:
    loop_var: loop_distribution
  tags:
    - configuration
    - packages

# Su busca el nombre del hostname que se esta actualizando actualmente... shell hostname o inventory_host de proxmox 
- name: Hostname
  shell: hostname
  changed_when: False
  register: hostnames

# verifica que existe un nuevo kernel para actualizar
- name: chequear si existe kernel nuevo
  shell:  apt-cache madison linux-image* linux-headers* linux-modules* | head -n 1 | awk -F"|" '{printf("%s\n", $2)}'
  changed_when: False
  register: uname_result

# envia mensaje a chat si existe una version de kernel nueva
- name: enviar mensaje al chat debian_upgrade_bot
  telegram:
    token: "{{ token }}"
    chat_id: "{{ chat_id }}"
  #  msg: El servidor {{ hostnames.stdout }} fue actualizado de Debian {{ release.stdout }} a {{ new_release.stdout }}
    msg: Existe una nueva version de kernel para {{ hostnames.stdout }} 
  #when: release.stdout != new_release.stdout
  when: uname_result.stdout_lines != []
